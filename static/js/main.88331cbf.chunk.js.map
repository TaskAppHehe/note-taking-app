{"version":3,"sources":["logo.svg","Components/UserContext.js","Components/Login.js","Components/SignUp.js","Components/PublicHomePage.js","Components/AddUserNote.js","Components/UserNote.js","Components/DashBoard.js","Components/RouterControl.js","Components/Note.js","Components/AddNote.js","Components/Header.js","Components/PrevApp.js","Components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","Login","props","useState","username","setUserName","password","setPassWord","users","setUsers","useContext","setCurrentUser","useEffect","fetch","then","data","json","inputFields","type","value","placeholder","onChange","e","target","onSubmit","preventDefault","map","user","input","SignUp","setUsername","setPassword","onClick","method","headers","body","JSON","stringify","alert","PublicHomePage","AddNote","title","setTitle","content","setContent","currentUser","rows","cols","className","id","response","setNotesChange","UserNote","note","textAreaFields","textArea","DashBoard","notes","setNotes","notesChange","HomePage","to","path","Note","_id","btoa","window","confirm","setNoteChanged","i","keys","has","setAdd","Header","App","Set","setKeys","add","noteChanged","newKeys","d","Main","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88331cbf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {createContext} from 'react'\r\n\r\nvar UserContext = createContext();\r\n\r\nexport default UserContext;","import React, {useState, useEffect, useContext} from 'react';\r\n\r\nimport UserContext from \"./UserContext\"\r\nexport default function Login(props){\r\n    var [username, setUserName] = useState('');\r\n    var [password, setPassWord] = useState('');\r\n    var [users, setUsers] = useState([]);\r\n    var [, setCurrentUser] = useContext(UserContext)\r\n\r\n    useEffect(()=> {\r\n        fetch(\"https://postgres-khai.herokuapp.com/users\")\r\n        .then(data => data.json())\r\n        .then(data => setUsers(data))\r\n    },[])\r\n    var inputFields = [\r\n        {\r\n            type: \"text\",\r\n            value: username,\r\n            placeholder: \"username\",\r\n            onChange: e => setUserName(e.target.value),\r\n        },\r\n        {\r\n            type: \"password\",\r\n            value: password,\r\n            placeholder: \"password\",\r\n            onChange: e => setPassWord(e.target.value)\r\n        }\r\n    ]\r\n\r\n    var handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        users.map(user => {\r\n            if(user.username === username && user.password === password) setCurrentUser(user)\r\n        })\r\n        \r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit = {handleSubmit}>\r\n                {\r\n                    inputFields.map(input => \r\n                        <input \r\n                            type = {input.type}\r\n                            value = {input.value}\r\n                            placeholder = {input.placeholder}\r\n                            onChange = {input.onChange}\r\n                        />)\r\n                }\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nexport default function SignUp(props){\r\n    var [username, setUsername] = useState();\r\n    var [password, setPassword] = useState();\r\n\r\n    var inputFields = [\r\n        {\r\n            placeholder: \"Username\",\r\n            type: \"text\",\r\n            value: username,\r\n            onChange: e => setUsername(e.target.value)\r\n        },\r\n        {\r\n            placeholder: \"Password\",\r\n            type: \"password\",\r\n            value: password,\r\n            onChange: e => setPassword(e.target.value)\r\n        },\r\n    ]\r\n\r\n    var createNewUser = (e) => {\r\n        e.preventDefault()\r\n        fetch(\"https://postgres-khai.herokuapp.com/users\",{\r\n            method: \"post\",\r\n            headers: {\"content-type\": \"application/json\"},\r\n            body: JSON.stringify({\r\n                username: username,\r\n                password: password\r\n            })\r\n        })\r\n        .then(alert(\"Create account!\"))\r\n    }\r\n    return(\r\n        <div>\r\n            <p>Use below to create new user</p>\r\n            <form>\r\n                {\r\n                    inputFields.map(input => \r\n                        <input \r\n                            placeholder = {input.placeholder}\r\n                            type = {input.type}\r\n                            value = {input.value}\r\n                            onChange = {input.onChange}\r\n                        />\r\n                    )\r\n                }\r\n                <button type = \"submit\" onClick = {createNewUser}>Create new account</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport LogIn from \"./Login\"\r\nimport SignUp from \"./SignUp\"\r\nexport default function PublicHomePage(props){\r\n    return(\r\n        <div>\r\n            <h1>Welcome to note taking app, login or sign up for private notes</h1>\r\n            <LogIn/>\r\n            <SignUp/>\r\n        </div>\r\n    )\r\n}","import React, {useState, useContext} from \"react\"\r\n\r\nimport UserContext from \"./UserContext\"\r\n\r\nexport default function AddNote(props){\r\n    var [title, setTitle] = useState(\"\")\r\n    var [content, setContent] = useState(\"\")\r\n    var [currentUser] = useContext(UserContext)\r\n    var inputFields = [\r\n        {\r\n            placeholder: \"Title\",\r\n            type: \"text\",\r\n            onChange: e => setTitle(e.target.value)\r\n            \r\n        },\r\n        {\r\n            placeholder: \"Content\",\r\n            type: \"text\",\r\n            onChange: e => setContent(e.target.value),\r\n            rows: 10,\r\n            cols: 50\r\n        }\r\n    ]\r\n\r\n    function postNewNote(){\r\n        if(!title || !content) {\r\n            alert(\"Title or content cannot be left empty\")\r\n            return;\r\n        }\r\n        fetch(\"https://postgres-khai.herokuapp.com/users/\" + currentUser.id + \"/notes\",{\r\n            method: \"POST\",\r\n            headers: {\"content-type\": \"application/json\"},\r\n            body: JSON.stringify({\r\n                title: title, \r\n                content: content\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(() => {\r\n            alert(\"Added note!\")\r\n            props.setNotesChange(true)\r\n        })\r\n    }\r\n    return(\r\n        <div className=\"vertical-flex-container width-fit-content\">\r\n            <h2>Add new note</h2>\r\n            {\r\n                inputFields.map(input => \r\n                <textarea\r\n                    placeholder={input.placeholder}\r\n                    type = {input.type}\r\n                    onChange = {input.onChange}\r\n                    \r\n                />)\r\n            }\r\n            <button onClick={postNewNote}>Add note</button>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nexport default function UserNote(props){\r\n    var [title, setTitle] = useState(props.note.title)\r\n    var [content, setContent] = useState(props.note.content)\r\n    \r\n    var textAreaFields = [\r\n        {\r\n            value: title,\r\n            onChange: e => setTitle(e.target.value)\r\n        },\r\n        {\r\n            value: content,\r\n            onChange: e => setContent(e.target.value),\r\n            rows: 10,\r\n            cols: 50\r\n        }\r\n    ]\r\n\r\n    var updateNote = () => {\r\n        fetch(\"https://postgres-khai.herokuapp.com/notes/\" +props.note.id,{\r\n            method: \"PUT\",\r\n            headers:{\"content-type\": \"application/json\"},\r\n            body: JSON.stringify({\r\n                title, content\r\n            })\r\n        })\r\n        .then(alert(\"Note changed!\"))\r\n    }\r\n\r\n    var deleteNote = () => {\r\n        fetch(\"https://postgres-khai.herokuapp.com/notes/\" +props.note.id,{\r\n            method: \"delete\",\r\n        })\r\n        .then(props.setNotesChange(true))\r\n        .then(alert(\"Delete note!\"))\r\n    }\r\n\r\n    return(\r\n            <div className=\"vertical-flex-container margin-10\">\r\n                {\r\n                    textAreaFields.map(textArea => \r\n                        <textarea className = \"bg-yellow\"\r\n                            value = {textArea.value} \r\n                            onChange = {textArea.onChange}\r\n                            rows = {textArea.rows}\r\n                            cols = {textArea.cols}\r\n                        />\r\n                    )    \r\n                }\r\n                <div>\r\n                    <button onClick = {updateNote}>Update</button>\r\n                    <button onClick = {deleteNote}>Delete</button>\r\n                </div>\r\n            </div>\r\n    )\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\n\r\nimport AddUserNote from \"./AddUserNote\"\r\nimport UserContext from \"./UserContext\"\r\nimport UserNote from \"./UserNote\"\r\n\r\nexport default function DashBoard(props){\r\n    var [currentUser, setCurrentUser] = useContext(UserContext);\r\n    var [notes, setNotes] = useState([]);\r\n    var [notesChange, setNotesChange] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        fetch(\"https://postgres-khai.herokuapp.com/users/\" + currentUser.id +\"/notes\")\r\n        .then(data => data.json())\r\n        .then(data => setNotes(data))\r\n        .then(setNotesChange(false))\r\n    }, [currentUser.id, notesChange])\r\n\r\n    return(\r\n        <>\r\n            <button onClick = {() => setCurrentUser()}>Log out</button>\r\n            <AddUserNote setNotesChange = {setNotesChange}/>\r\n            <div className = \"container\">\r\n                {\r\n                    notes.map(note => \r\n                        <UserNote \r\n                            note = {note}\r\n                            setNotesChange = {setNotesChange}\r\n                            />)\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, {useContext} from 'react';\r\nimport {BrowserRouter as Router, Switch, Route, Link, Redirect} from \"react-router-dom\"\r\n\r\nimport PublicHomePage from \"./PublicHomePage\"\r\nimport LogIn from \"./Login\"\r\nimport DashBoard from \"./DashBoard\"\r\nimport UserContext from \"./UserContext\"\r\nexport default function HomePage(props){\r\n    var [currentUser] = useContext(UserContext)\r\n\r\n    return(\r\n        <Router>\r\n                <nav>\r\n                    <ul> {/* tried to remove this  */}\r\n                        <li><Link to = \"/\">Home</Link></li>\r\n                        <li><Link to = \"/dashboard\">Dashboard</Link></li>\r\n                    </ul>\r\n                </nav>\r\n                <Switch>\r\n                    <Route path = \"/dashboard\">\r\n                        { currentUser ? <DashBoard/> : <Redirect to = \"/\"/> }\r\n                    </Route>\r\n                    <Route path = \"/\">\r\n                        { currentUser ? <Redirect to = \"/dashboard\" /> : <PublicHomePage/>}\r\n                    </Route>\r\n                </Switch>\r\n        </Router>\r\n        \r\n    )\r\n}","import React, {useState} from \"react\";\r\nexport default function Note(props){\r\n\r\n    var [title, setTitle] = useState(props.note.title)\r\n    var [content, setContent] = useState(props.note.content)\r\n\r\n    var textAreaFields = [\r\n        {\r\n            value: title,\r\n            onChange: e => setTitle(e.target.value)\r\n        },\r\n        {\r\n            value: content,\r\n            onChange: e => setContent(e.target.value),\r\n            rows: 10,\r\n            cols: 50\r\n        }\r\n    ]\r\n\r\n    function updateNote(){\r\n        fetch(\"https://fast-forest-86060.herokuapp.com/notes/\"+props.note._id,{\r\n            method: \"PUT\",\r\n            headers: {\"content-type\": \"application/json\", \r\n                      \"Authorization\": \"Basic\" + btoa(\"admin:password\")},\r\n            body: JSON.stringify({\r\n                title: title,\r\n                content: content\r\n            })\r\n        })\r\n        .then( alert(\"Note changed!\"))\r\n    }\r\n    function deleteNote(){\r\n        if(window.confirm(\"Do you want to delete this note?\")){\r\n            fetch(\"https://fast-forest-86060.herokuapp.com/notes/\"+props.note._id,{\r\n            method: \"DELETE\",\r\n            headers: {\"content-type\": \"application/json\", \r\n                      \"Authorization\": \"Basic \" +  btoa(\"admin:password\")}\r\n            })\r\n            .then(() => {\r\n                props.setNoteChanged(true)\r\n            })\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"vertical-flex-container margin-10\">\r\n            {\r\n                textAreaFields.map(textArea => \r\n                    <textarea className = \"bg-yellow\"\r\n                        value = {textArea.value} \r\n                        onChange = {textArea.onChange}\r\n                        rows = {textArea.rows}\r\n                        cols = {textArea.cols}\r\n                    />\r\n                )    \r\n            }\r\n            <div>\r\n                <button onClick = {updateNote}>Update</button>\r\n                <button onClick = {deleteNote}>Delete</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\"\r\nexport default function AddNote(props){\r\n    var [title, setTitle] = useState(\"\")\r\n    var [content, setContent] = useState(\"\")\r\n\r\n    var inputFields = [\r\n        {\r\n            placeholder: \"Title\",\r\n            type: \"text\",\r\n            onChange: e => setTitle(e.target.value)\r\n            \r\n        },\r\n        {\r\n            placeholder: \"Content\",\r\n            type: \"text\",\r\n            onChange: e => setContent(e.target.value),\r\n            rows: 10,\r\n            cols: 50\r\n        }\r\n    ]\r\n\r\n    function postNewNote(){\r\n        if(!title || !content) {\r\n            alert(\"Title or content cannot be left empty\")\r\n            return;\r\n        }\r\n        var i = 0;\r\n        while(props.keys.has(i)) i++\r\n        fetch(\"https://fast-forest-86060.herokuapp.com/notes\",{\r\n            method: \"POST\",\r\n            headers: {\"content-type\": \"application/json\", \r\n                      \"Authorization\": \"Basic \" +  btoa(\"admin:password\")},\r\n            body: JSON.stringify({\r\n                _id : i,\r\n                title: title, \r\n                content: content\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(() => {\r\n                props.setAdd(true)\r\n            })\r\n    }\r\n    return(\r\n        <div className=\"vertical-flex-container width-fit-content\">\r\n            <h2>Add new note</h2>\r\n            {\r\n                inputFields.map(input => \r\n                <textarea\r\n                    placeholder={input.placeholder}\r\n                    type = {input.type}\r\n                    onChange = {input.onChange}\r\n                    \r\n                />)\r\n            }\r\n            <button onClick={postNewNote}>Add note</button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nexport default function Header(props){\r\n\r\n    return(\r\n        <h2>This is public note and everyone can modify</h2>\r\n    )\r\n}","import React, {useState, useEffect} from \"react\";\r\n\r\nimport Note from \"./Note\"\r\nimport AddNote from \"./AddNote\"\r\nimport Header from \"./Header\"\r\n\r\nimport \"./style.css\"\r\nexport default function App(){\r\n    var [notes,setNotes] = useState([])\r\n    var [keys, setKeys] = useState(new Set())\r\n    var [add, setAdd] = useState(false)\r\n    var [noteChanged, setNoteChanged] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        setNotes([])\r\n        fetch(\"https://fast-forest-86060.herokuapp.com/notes\",{\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"Authorization\": \"Basic \" +  btoa(\"admin:password\")\r\n            }\r\n        })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                setNotes(data)\r\n                var newKeys = new Set(keys)\r\n                //add all the __id to keys so that we can figure out new unique __id\r\n                data.map(d => {\r\n                    if(!newKeys.has(d._id)) newKeys.add(d._id)\r\n                })\r\n                setKeys(newKeys)\r\n                setAdd(false)\r\n                setNoteChanged(false)\r\n            })\r\n    },[add, noteChanged])\r\n\r\n    return (\r\n        <div className = \"bg-primary\">\r\n            <Header />\r\n            <AddNote keys = {keys} setAdd = {setAdd}/>\r\n            <div className=\"container\">\r\n                {\r\n                    notes.map(note => <Note note = {note} setNoteChanged = {setNoteChanged}/>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\n\r\nimport RouterControl from \"./RouterControl.js\"\r\nimport UserContext from \"./UserContext\"\r\nimport PrevApp from \"./PrevApp\"\r\n\r\nimport './style.css'\r\nexport default function Main(props){\r\n    var [currentUser, setCurrentUser] = useState(false);\r\n    return(\r\n        <UserContext.Provider value = {[currentUser, setCurrentUser]}>\r\n            <RouterControl/>\r\n            <PrevApp/>\r\n        </UserContext.Provider>\r\n    )\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport Main from \"./Components/Main\" //changes to App for old notes\n\nfunction App() {\n  return (\n    <div>\n      {/*<img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}