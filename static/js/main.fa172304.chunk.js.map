{"version":3,"sources":["logo.svg","Components/Note.js","Components/AddNote.js","Components/Header.js","Components/App.js","App.js","reportWebVitals.js","index.js"],"names":["Note","props","useState","note","title","setTitle","content","setContent","textAreaFields","value","onChange","e","target","rows","cols","className","map","textArea","onClick","fetch","_id","method","headers","body","JSON","stringify","window","confirm","then","setNoteChanged","AddNote","inputFields","placeholder","type","input","oninput","i","keys","has","response","json","setAdd","alert","Header","App","notes","setNotes","Set","setKeys","add","noteChanged","useEffect","data","newKeys","d","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa172304.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState} from \"react\";\r\nexport default function Note(props){\r\n\r\n    var [title, setTitle] = useState(props.note.title)\r\n    var [content, setContent] = useState(props.note.content)\r\n\r\n    var textAreaFields = [\r\n        {\r\n            value: title,\r\n            onChange: e => setTitle(e.target.value)\r\n        },\r\n        {\r\n            value: content,\r\n            onChange: e => setContent(e.target.value),\r\n            rows: 10,\r\n            cols: 50\r\n        }\r\n    ]\r\n\r\n    function updateNote(){\r\n        fetch(\"https://fast-forest-86060.herokuapp.com/notes/\"+props.note._id,{\r\n            method: \"PUT\",\r\n            headers: {\"content-type\": \"application/json\"},\r\n            body: JSON.stringify({\r\n                title: title,\r\n                content: content\r\n            })\r\n        })\r\n    }\r\n    function deleteNote(){\r\n        if(window.confirm(\"Do you want to delete this note?\")){\r\n            fetch(\"https://fast-forest-86060.herokuapp.com/notes/\"+props.note._id,{\r\n            method: \"DELETE\"\r\n            })\r\n            .then(() => {\r\n                props.setNoteChanged(true)\r\n            })\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"vertical-flex-container margin-10\">\r\n            {\r\n                textAreaFields.map(textArea => \r\n                    <textarea className = \"bg-yellow\"\r\n                        value = {textArea.value} \r\n                        onChange = {textArea.onChange}\r\n                        rows = {textArea.rows}\r\n                        cols = {textArea.cols}\r\n                    />\r\n                )    \r\n            }\r\n            <div>\r\n                <button onClick = {updateNote}>Update</button>\r\n                <button onClick = {deleteNote}>Delete</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\"\r\nexport default function AddNote(props){\r\n    var [title, setTitle] = useState(\"\")\r\n    var [content, setContent] = useState(\"\")\r\n\r\n    var inputFields = [\r\n        {\r\n            placeholder: \"Title\",\r\n            type: \"text\",\r\n            onChange: e => setTitle(e.target.value)\r\n            \r\n        },\r\n        {\r\n            placeholder: \"Content\",\r\n            type: \"text\",\r\n            onChange: e => setContent(e.target.value),\r\n            rows: 10,\r\n            cols: 50\r\n        }\r\n    ]\r\n\r\n    function postNewNote(){\r\n        if(!title || !content) {\r\n            alert(\"Title or content cannot be left empty\")\r\n            return;\r\n        }\r\n        var i = 0;\r\n        while(props.keys.has(i)) i++\r\n        fetch(\"https://fast-forest-86060.herokuapp.com/notes\",{\r\n            method: \"POST\",\r\n            headers: {\"content-type\":\"application/json\"},\r\n            body: JSON.stringify({\r\n                _id : i,\r\n                title: title, \r\n                content: content\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(() => {\r\n                props.setAdd(true)\r\n            })\r\n    }\r\n    return(\r\n        <div className=\"vertical-flex-container width-fit-content\">\r\n            <h2>Add new note</h2>\r\n            {\r\n                inputFields.map(input => \r\n                <textarea\r\n                    placeholder={input.placeholder}\r\n                    type = {input.type}\r\n                    onChange = {input.onChange}\r\n                    oninput='this.style.height = \"\";this.style.height = this.scrollHeight + \"px\"'\r\n                />)\r\n            }\r\n            <button onClick={postNewNote}>Add note</button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nexport default function Header(props){\r\n\r\n    return(\r\n        <h2>Welcome to note taking app!</h2>\r\n    )\r\n}","import React, {useState, useEffect} from \"react\";\r\n\r\nimport Note from \"./Note\"\r\nimport AddNote from \"./AddNote\"\r\nimport Header from \"./Header\"\r\n\r\nimport \"./style.css\"\r\nexport default function App(){\r\n    var [notes,setNotes] = useState([])\r\n    var [keys, setKeys] = useState(new Set())\r\n    var [add, setAdd] = useState(false)\r\n    var [noteChanged, setNoteChanged] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        setNotes([])\r\n        fetch(\"https://fast-forest-86060.herokuapp.com/notes\")\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                setNotes(data)\r\n                var newKeys = new Set(keys)\r\n                //add all the __id to keys so that we can figure out new unique __id\r\n                data.map(d => {\r\n                    if(!newKeys.has(d._id)) newKeys.add(d._id)\r\n                })\r\n                setKeys(newKeys)\r\n                setAdd(false)\r\n                setNoteChanged(false)\r\n            })\r\n    },[add, noteChanged])\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <AddNote keys = {keys} setAdd = {setAdd}/>\r\n            <div className=\"container\">\r\n                {\r\n                    notes.map(note => <Note note = {note} setNoteChanged = {setNoteChanged}/>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport Main from \"./Components/App\"\n\nfunction App() {\n  return (\n    <div>\n      {/*<img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}